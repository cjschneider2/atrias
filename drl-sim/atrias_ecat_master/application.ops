import("atrias_ecat_master")
import("atrias_controller_switcher")

require("ros_integration")

print.log(Info, "Starting ATRIAS deployment script.")

# Load necessary components.
loadComponent("atrias_em", "AtriasEthercatMaster")
loadComponent("atrias_cs", "AtriasControllerSwitcher")

# Set activity properties.
setActivity("atrias_em", 0.001, HighestPriority, ORO_SCHED_RT)
setActivity("atrias_cs", 0.0005, 60, ORO_SCHED_RT)

# Create connections
var ConnPolicy controller_req
var ConnPolicy adata
var ConnPolicy adebug

connect("atrias_em.data_out",  "atrias_cs.data_in",  adata)
connect("atrias_em.debug_out", "atrias_cs.debug_in", adebug)
connect("atrias_cs.controller_requests_out", "atrias_em.controller_requests_in", controller_req)

stream("atrias_cs.controller_requests_in", ros.topic("/atrias_controller_requests"))
stream("atrias_cs.debug_out",        ros.topic("/atrias_cs_debug_out"))
stream("atrias_cs.data_50_hz_out",   ros.topic("/atrias_data_50_hz"))
stream("atrias_cs.data_1000_hz_out", ros.topic("/atrias_data_1000_hz"))

# Configure components.
atrias_em.configure()
atrias_cs.configure()

# Start components.
atrias_em.start()
atrias_cs.start()



### Ineffective things tried ###
#adata.type = BUFFER
#adata.data_size = 100000
#adata.size = 100000
#adata.name_id = "atrias_cs.data_in"
#
# Try buffering the connection.
#var ConnPolicy adata_ros
#adata_ros.transport = 3
#adata_ros.data_size = 100000
#adata_ros.size = 100000
#adata_ros.name_id = "/atrias_data_1000_hz"

