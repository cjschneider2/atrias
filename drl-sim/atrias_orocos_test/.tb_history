ls
displayComponentTypes 
ls
displayComponentTypes 
import("atrias_orocos_test")
ls
displayComponentTypes 
createStream 
ls
loadComponent("AtriasComponent", Atrias_orocos_testData )
loadComponent("AtriasComponent", Atrias_orocos_test )
loadComponent("AtriasComponent", "Atrias_orocos_test" )
ls
AtriasComponnet
AtriasComponent
AtriasComponent.thread
AtriasComponent->thread()
AtriasComponent
ls
startComponents 
stopComponents 
startComponents 
start
stop
stopComponents 
ls
isActive 
AtriasComponent.configure 
AtriasComponent.update
AtriasComponent.start
AtriasComponent.trigger
AtriasComponent.trigger
AtriasComponent.setPeriod (0.1)
stop
Atrias_orocos_test.stop
AtriasComponent.stop
ls
AtriasComponent.getPeriod 
AtriasComponent.setPeriod (0.001
AtriasComponent.setPeriod (0.1)
ls
loadComponent("ac", "A
displayComponentTypes 
import("Atrias_orocos_test")
import("Atrias_orocos_testData")
displayComponentTypes 
loadComponent("AtriasComponent", "Atrias_orocos_test" )
displayComponentTypes 
import("atrias_orocos_test")
displayComponentTypes 
loadComponent("ac", "Atrias_orocos_test")
ls
ac.start
ac.stop
ls
displayComponentTypes 
import("atrias_orocos_test")
s
displayComponentTypes 
loadComponent("ac", "Atrias_orocos_test")
ac
ac.start
ac.start
ac.trigger
ac.trigger
ac.stop
ac.setPeriod(0.1)
ac.start
ac.stop
ac.count
ac
ac.getPeriod 
import("atrias_orocos_test")
loadComponent("ac", "Atrias_orocos_test")
ac
ac.getPeriod 
ac.setPeriod(0.1)
ac.start
ac.stop
ac.setPeriod (0.001)
ac.start
stop
ac.stop
ac.get
ls
this
setActivity
setActivity(1, 0.001, NULL, "arst")
setActivity(1, 0.001, 0, "arst")
setActivity(1, 0.001)
ls
ac.thread
ac->thread()
ac
ac.getActivity
ls
setActivity(1, 0.001, ac, "act")
setActivity(1, 0.001, 0, "act")
setActivity(ORO_SCHED_RT, 1, 0.001, 0, "act")
setActivity(ORO_SCHED_RT, 1, 0.001, 0, 1)
setActivity(1, 0.001, 0, 1)
setActivity(1, 0.001, "ac", 1)
setActivity("ac", 0.001, 0, 1)
ac
ac.getPeriod
setActivity("ac", 0.0005, 0, 1)
ac.getPeriod
ls
import("atrias_orocos_test")
ls
import("Atrias_orocos_test")
import("Atrias_orocos_testData")
ls
import("atrias_orocos_test")
ls
displayComponentTypes 
import("atrias_orocos_test")
displayComponentTypes 
path("/home/drl/atrias/drl-sim/atrias_orocos_test")
import("atrias_orocos_test")
ls
displayComponentTypes 
ls
update
import(.)
ls
import("atrias_orocos_test")
ls
displayComponentTypes 
exit
ls
import("atrias_orocos_test")
ls
l
ls
import("atrias_orocos_test")
sl
ls
import("atrias_orocos_test")
ls
displayComponentTypes 
setActivity("ac", 0.001, 0, 1)
createStream rstarst
loadComponent("ac", "Atrias_orocos_test")
ls
ac
setActivity("ac", 0.001, 0, 1)
ac.getPeriod 
ac.start
stop
ac.stop
setActivity(1, 0.001, 0, "ac")
setActivity(1, 0.001, 0, 1)
setActivity("ac", 0.001, 0, 1)
setActivity("ac", 0.001, 99, 1)
ac.start
ac.stop
loadComponent("ac")
loadComponent("ac", "arst")
loadComponent("ac2", "arst")
loadComponent("ac2", "Atrias_orocos_testData")
loadComponent("ac2", "Atrias_orocos_test")
ls
displayComponentTypes 
import("atrias_orocos_test"()
import("atrias_orocos_test")
displayComponentTypes 
loadComponent("ac", "Atrias_orocos_test")
ls
setActivity("ac", 0.001, 1, 1)
ac.start
ac.stop
ac.setPeriod(0.0005)
ac.start
ac.stop
ac.getPeriod 
ls
import ('atrias_orocos_test')
import ("atrias_orocos_test")
loadComponent("ac")
loadComponent("ac", "Atrias_orocos_test")
ls
setActivity("ac", 0.001, 1, 0)
ac
ac.start
ac.stop
import ("atrias_orocos_test")
loadComponent("ac", "Atrias_orocos_test")
setActivity("ac", 0.001, 1, ORO_SCHED_RT)
ls
ac.start
ac.stop
import ("atrias_orocos_test")
loadComponent("ac", "Atrias_orocos_test")
setActivity("ac", 0.001, 1, ORO_SCHED_RT)
ac.start
ac.stop
ls
setActivity("ac", 0.001, 99, ORO_SCHED_RT)
ac.start
ac.stop
ls
setActivity("ac", 0.001, 0, ORO_SCHED_RT)
setActivity("ac", 0.001, 99, ORO_SCHED_RT)
ac.start
ac.stop
setActivity("ac", 0.001, 1, ORO_SCHED_RT)
ac.start
ac.stop
l
ls
import ("atrias_orocos_test")
loadComponent("ac", "Atrias_orocos_test")
setActivity("ac", 0.001, 99, ORO_SCHED_RT)
ls
ac.start
stop
ac.stop
qui
