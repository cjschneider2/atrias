import("atrias_rt_ops")
import("atrias_sim_conn")

# Load necessary components.
loadComponent("atrias_rt", "RTOps")
loadComponent("atrias_connector", "SimConn")

# Let these see each other.
connectPeers("atrias_connector", "atrias_rt")

# The connector used to be an aperiodic activity that was triggered by an
# EventPort, but it had performance issues (/log_robot_state was not updated as
# frequently as data became available on /atrias_sim_data).
setActivity("atrias_connector", 0.0005, 50, ORO_SCHED_RT)

# Make RT Ops realtime.
setActivity("atrias_rt", 0, 80, ORO_SCHED_RT)

var ConnPolicy gazeboConnPolicy

# Buffer connection so the controllers run at simulation frequency.
gazeboConnPolicy.type = BUFFER
gazeboConnPolicy.size = 100000
gazeboConnPolicy.transport = 3
gazeboConnPolicy.name_id = "/atrias_sim_data"
stream("atrias_connector.gazebo_data_in",  gazeboConnPolicy)
gazeboConnPolicy.name_id = "/atrias_controller_requests"
stream("atrias_connector.gazebo_data_out", gazeboConnPolicy)

# Configure components.
atrias_rt.configure()
atrias_connector.configure()

# Start components.
atrias_rt.start();
atrias_connector.start();
