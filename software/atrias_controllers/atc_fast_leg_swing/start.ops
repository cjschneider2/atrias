# Clean up the controller namespace
atrias_cm.resetControllerNames()

# Set up the component
import("atc_fast_leg_swing")
loadComponent("controller", "ATCFastLegSwing")

# Connect RTOps with this controller (so they can see each other's operations)
connectPeers("atrias_rt", "controller")

# Set up subcontrollers
import("asc_pd")
import("asc_path_generator")

var string pathGenerator0Name = atrias_cm.getUniqueName("controller", "pathGenerator")
loadComponent(pathGenerator0Name, "ASCParabolaPathGenerator")

var string pathGenerator1Name = atrias_cm.getUniqueName("controller", "pathGenerator")
loadComponent(pathGenerator1Name, "ASCParabolaPathGenerator")

var string pd0Name = atrias_cm.getUniqueName("controller", "pd")
loadComponent(pd0Name, "ASCPD")

var string pd1Name = atrias_cm.getUniqueName("controller", "pd")
loadComponent(pd1Name, "ASCPD")

# Connect this controller with its subcontrollers
addPeer("controller", pathGenerator0Name)
addPeer("controller", pathGenerator1Name)
addPeer("controller", pd0Name)
addPeer("controller", pd1Name)

# Pass the names of the subcontrollers to the controller
controller.pathGenerator0Name = pathGenerator0Name
controller.pathGenerator1Name = pathGenerator1Name
controller.pd0Name = pd0Name
controller.pd1Name = pd1Name

# Set up the gui connection
var ConnPolicy gui_policy
gui_policy.transport = 3

gui_policy.name_id = "/atc_fast_leg_swing_input"
stream("controller.gui_data_in", gui_policy)

# Configure the component
controller.configure()

# Start the component
controller.start()
