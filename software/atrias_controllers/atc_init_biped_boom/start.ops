require("scripting")
require("print")
import("rtt_rospack")

# Clean up the controller namespace
atrias_cm.resetControllerNames()

# Set up the component
import("atc_biped_boom_init_test")
loadComponent("controller", "ATCBipedBoomInitTest")
setActivity("controller", 0, HighestPriority, ORO_SCHED_RT)

# Connect RTOps with this controller (so they can see each other's operations)
connectPeers("atrias_rt", "controller")

# Set up the subcontroller environment
var string bipedBoomInit0Name = atrias_cm.getUniqueName("controller", "bipedBoomInit")
import("asc_biped_boom_init")

# Get the functions and start the subcontroller
scripting.runScript(rospack.find("asc_biped_boom_init") + "/start.ops")
ascBipedBoomInitStart(bipedBoomInit0Name)

# Connect this controller with its subcontroller
addPeer("controller", bipedBoomInit0Name)

# Pass the names of the subcontroller to the controller
controller.bipedBoomInit0Name = bipedBoomInit0Name

# Set up the gui connection
var ConnPolicy gui_policy
gui_policy.transport = 3

gui_policy.name_id = "/atc_biped_boom_init_test_input"
stream("controller.gui_data_in", gui_policy)

# Configure the component
controller.configure()

# Start the component
controller.start()
