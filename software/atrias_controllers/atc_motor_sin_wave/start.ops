require("print")

# Set up the top controller
import("atc_motor_sin_wave")
loadComponent("controller", "ATCMotorSinWave")
setActivity("controller", 0, HighestPriority, ORO_SCHED_RT)

# Connect RTOps with this controller (so they can see each other's operations)
connectPeers("atrias_rt", "controller")

# Set up subcontrollers
import("asc_pd")
import("asc_sin_generator")
var string pd0Name = atrias_cm.getUniqueName("controller", "pd")
var string pd1Name = atrias_cm.getUniqueName("controller", "pd")
var string sin0Name = atrias_cm.getUniqueName("controller", "sin")
loadComponent(pd0Name, "ASCPD")
loadComponent(pd1Name, "ASCPD")
loadComponent(sin0Name, "ASCSinGenerator")

# Connect this controller with its subcontrollers.
addPeer("controller", pd0Name)
addPeer("controller", pd1Name)
addPeer("controller", sin0Name)
# Pass the names of the subcontrollers to the controller
controller.pd0Name = pd0Name
controller.pd1Name = pd1Name
controller.sin0Name = sin0Name

# Set up the gui connection
var ConnPolicy gui_policy
gui_policy.transport = 3
gui_policy.name_id = "/atc_motor_sin_wave_input"
stream("controller.gui_data_in", gui_policy)

# Configure components and subcomponents
controller.configure()

# Start components and subcomponents
controller.start()
